import yaml
import numpy

def artunc():

    with open('rawdata/data49.yaml', 'r') as file:
        corMatFile = yaml.safe_load(file)

    corMatHalfArr = []
    for i in range(4656):
        corMatHalfArr.append(float(corMatFile['dependent_variables'][0]['values'][i]['value']))

    errPercArr = []
    for i in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]:
        hepdata_tables="rawdata/data"+str(i)+".yaml"
        with open(hepdata_tables, 'r') as file:
            input = yaml.safe_load(file)
        values = input['dependent_variables'][0]['values']
        for j in range(len(values)):
            errPerc = values[j]['errors'][0]['symerror']
            errPercArr.append(errPerc)

    dataArr = [
        1520.2961417766862,
        442.3175691947408,
        105.70160196949213,
        18.14506808583527,
        2.1399496052095146,
        0.3245909002911952,
        1077.3804779284385,
        362.815922459706,
        84.82128198457113,
        12.611769178156917,
        1.6488761432230024,
        0.2431083191352701,
        1058.6251203486613,
        355.4571461463955,
        90.39042777449247,
        14.97510056874838,
        2.334208671252201,
        0.4670943983756343,
        736.7197279128237,
        277.7321181166529,
        71.32789033718993,
        13.381449353442337,
        1.79262563160108,
        0.25529521769389,
        559.5770182732919,
        230.421157213187,
        63.39114094103584,
        10.714928105884749,
        1.8752280055125135,
        0.3996182365650588,
        536.6156110816592,
        241.92835772695966,
        65.55739999405293,
        12.932536154774963,
        1.5666573836687063,
        0.250260931747206,
        387.36874135827804,
        196.74688939366885,
        60.414108908399854,
        12.64536449988521,
        2.1989983062271126,
        0.3756551576485761,
        278.28860056198323,
        122.49103459556666,
        38.40238587011927,
        9.3206628937902,
        1.0386065045993735,
        0.19147927798236986,
        300.8386677100331,
        185.5365,
        39.636222064504906,
        6.713645921613139,
        1.1580313906679875,
        0.20214206084082534,
        256.86806266247845,
        149.13035618638878,
        31.962858874503045,
        5.031889974964563,
        0.8757761117291504,
        0.058533235734612075,
        237.9233979964179,
        149.25564118241678,
        36.50567687429898,
        6.847362740474308,
        1.1132325663941531,
        0.12321352552545174,
        167.71614016740705,
        112.75547285783524,
        26.75915698151381,
        4.841240223786809,
        0.8268615539886516,
        0.12577124203665177,
        147.12591116831436,
        105.0856650788387,
        26.610994657223753,
        4.835157056895064,
        0.8466569662510156,
        0.17021922796824931,
        116.19479756133823,
        94.10972117828628,
        26.66370967214426,
        5.12280820026146,
        0.8663513857534948,
        0.12950413772236807,
        104.5356,
        87.92461361887027,
        25.242817732290895,
        5.06028964063829,
        0.9188844202824134,
        0.10458873146366347,
        69.94387580997083,
        55.47500956228569,
        17.727235527906032,
        3.4436523820948457,
        0.516462285941673,
        0.10360728971715712
    ]

    errArr = []
    for i in range(96):
        errArr.append(float(errPercArr[i].replace("%", "")) * dataArr[i] * 0.01)

    covMat = numpy.zeros((96, 96))
    artUnc = numpy.zeros((96, 96))

    for i in range(96):
        for j in range(i+1):
            cmhap = (i * (i+1)) // 2 + j
            if i == j:
                covMat[i][j] = corMatHalfArr[cmhap] * errArr[i] * errArr[j]
            else:
                covMat[i][j] = corMatHalfArr[cmhap] * errArr[i] * errArr[j]
                covMat[j][i] = corMatHalfArr[cmhap] * errArr[i] * errArr[j]

    eigVal, eigVec = numpy.linalg.eig(covMat)
    for i in range(96):
        for j in range(96):
            if eigVal[j] < 0:
                continue
            else:
                artUnc[i][j] = eigVec[i][j] * numpy.sqrt(eigVal[j])

    return artUnc

def artunc_norm():
    
    with open('rawdata/data50.yaml', 'r') as file:
        corMatFile = yaml.safe_load(file)

    corMatHalfArr = []
    for i in range(4656):
        corMatHalfArr.append(float(corMatFile['dependent_variables'][0]['values'][i]['value']))

    errPercArr = []
    for i in [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40]:
        hepdata_tables="rawdata/data"+str(i)+".yaml"
        with open(hepdata_tables, 'r') as file:
            input = yaml.safe_load(file)
        values = input['dependent_variables'][0]['values']
        for j in range(len(values)):
            errPerc = values[j]['errors'][0]['symerror']
            errPercArr.append(errPerc)

    dataArr = [
        0.11146638373029033,
        0.03260425294916205,
        0.00780303062141272,
        0.0013327131328265693,
        0.00015735053216561418,
        2.397326321286638e-05,
        0.12273962071503276,
        0.041128728675556885,
        0.009635904141767026,
        0.0014304576986950708,
        0.0001874038818428799,
        2.7510605846330985e-05,
        0.13572558369439658,
        0.04552902550314116,
        0.011588911705576466,
        0.0019179871004487625,
        0.00029966775610919006,
        5.9847166170650175e-05,
        0.1521054003899483,
        0.05745153363991823,
        0.014806835816639396,
        0.002777235433313776,
        0.00037183810327547816,
        5.276891665673727e-05,
        0.16103405510139532,
        0.0661681569208333,
        0.018271234090758356,
        0.003089812363910013,
        0.0005383450766005511,
        0.00011506147038943812,
        0.1931927159305228,
        0.08700582158574599,
        0.023585163160108006,
        0.004631325800005102,
        0.0005619636495854181,
        9.014506555236299e-05,
        0.18759623880322573,
        0.09532876271631908,
        0.029290177940496525,
        0.0061403249350086165,
        0.001064888329393524,
        0.00018171526427897267,
        0.23801794388104405,
        0.10441732513677887,
        0.0327,
        0.007957448109729214,
        0.0008875035976320316,
        0.0001637305941636206,
        0.022225956526393757,
        0.013631279999999999,
        0.002923388463450865,
        0.0004944852924163965,
        8.511073871314873e-05,
        1.4891509349153345e-05,
        0.029226345732341914,
        0.01692105037656739,
        0.0036375951969747212,
        0.0005711506052964789,
        9.913179054376311e-05,
        6.637175047154547e-06,
        0.030498423509192078,
        0.019048455204435884,
        0.004676164682230587,
        0.0008779856155300615,
        0.00014255358412076693,
        1.56806923872845e-05,
        0.03473863699525548,
        0.023337843503755184,
        0.005547909095295187,
        0.00100032695526217,
        0.00017003384043947056,
        2.59737950018694e-05,
        0.04217174868924572,
        0.030192693710166127,
        0.007646043384181604,
        0.0013933980184821864,
        0.00024330890258531597,
        4.8778812144531516e-05,
        0.04196617222258683,
        0.03387788071129395,
        0.009606924608465461,
        0.0018445738470452336,
        0.00031161912905632196,
        4.667317306387262e-05,
        0.05044849,
        0.042542278920549084,
        0.0121652183888733,
        0.002454769251126736,
        0.0004445158481063405,
        5.0517147368211605e-05,
        0.05960628722984029,
        0.04733340003268701,
        0.015174847743622029,
        0.0029392397471454433,
        0.0004416238192784074,
        8.85443233374085e-05,
    ]

    errArr = []
    for i in range(96):
        errArr.append(float(errPercArr[i].replace("%", "")) * dataArr[i] * 0.01)

    covMat = numpy.zeros((96, 96))
    artUnc = numpy.zeros((96, 96))

    for i in range(96):
        for j in range(i+1):
            cmhap = (i * (i+1)) // 2 + j
            if i == j:
                covMat[i][j] = corMatHalfArr[cmhap] * errArr[i] * errArr[j]
            else:
                covMat[i][j] = corMatHalfArr[cmhap] * errArr[i] * errArr[j]
                covMat[j][i] = corMatHalfArr[cmhap] * errArr[i] * errArr[j]

    eigVal, eigVec = numpy.linalg.eig(covMat)
    for i in range(96):
        for j in range(96):
            if eigVal[j] < 0:
                continue
            else:
                artUnc[i][j] = eigVec[i][j] * numpy.sqrt(eigVal[j])

    return artUnc

print(artunc())